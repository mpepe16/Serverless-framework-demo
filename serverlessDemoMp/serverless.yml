

service: serverlessdemomp
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  profile: serverlessUser
  region: eu-central-1
  environment:
        tableName: ${self:custom.tableName}
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
              - 'dynamodb:*'
          Resource: '*'

plugins:
  - serverless-plugin-typescript

custom:
    tableName: player-points

functions:
  getHelloWorld:
    handler: lambdas/getHelloWorld.lambdaHandler
    events: 
        - http: 
            path: get-hello-world
            method: GET
            cors: true  
  getUser:
        handler: lambdas/endpoints/getUser.handler
        events:
            - http:
                  path: get-user/{ID}
                  method: GET
                  cors: true
  getPlayerScore:
        handler: lambdas/endpoints/getPlayerScore.handler
        events:
            - http:
                  path: get-player-score/{ID}
                  method: GET
                  cors: true
resources:
  Resources:
    DemoBucketUpload:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: myserverless-project-upload-mp
    MyDynamoDbTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.tableName}
                AttributeDefinitions:
                    - AttributeName: ID
                      AttributeType: S
                KeySchema:
                    - AttributeName: ID
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
